Given:
class CheckClass {
public static int checkValue (String s1, String s2) {
return s1 length() – s2.length();
}
}
and the code fragment:
String[] strArray = new String [] {"Tiger", "Rat", "Cat", "Lion"}
//line n1
for (String s : strArray) {
System.out.print (s + " ");
}
Which code fragment should be inserted at line n1 to enable the code to print Rat Cat Lion
Tiger?
A. Arrays.sort(strArray, CheckClass :: checkValue);
B. Arrays.sort(strArray, (CheckClass :: new) :: checkValue);
C. Arrays.sort(strArray, (CheckClass :: new).checkValue);
D. Arrays.sort(strArray, CheckClass :: new :: checkValue);
Answer: A

Predicate is a functional interface that takes a single parameter of any type and returns a boolean . 
Another functional interface is Consumer , which takes a single parameter of any type and has a void return type. 
Finally, Supplier doesn’t take any parameters and returns any type. 